程序设计笔记

程序设计基础

C语言程序设计

高级语言程序设计（Python）

函数
变量作用域 全局变量 局部变量
global

函数方法=>模块=>包
from bs4 import BeautifulSoup
模块（module）是一个Python文件，以.py结尾，包含了Python函数等语句。先导入，再使用，用模块.函数名调用。
查看模块的函数方法
import math
dir(math)
help(math.sin)

input()函数 默认当作一个字符串，使用folat()等类型转换
bool->int->float->complex  

while与for循环 任何for都可以用while改写
while不确定次数
for确定次数

break与continue
break结束当前循环体
continue跳过本次循环

递归
阶乘
斐波那契数列
路边随机停车问题
汉诺塔问题
定义函数hanoi(n, A, B, C)表示把A上的n个盘子移动到C上，其中可以用到B
def hanoi(n, A, B, C):
    if n == 1:
        print("Move disk", n "from", A, "to", C)
    else:
        hanoi(n-1, A, C, B)
        print("Move disk", n "from", A, "to", C)
        hanoi(n-1, B, A, C)
n = int(raw_input("输入一个整数："))
hanoi(n, "左", "中", "右")

字符串
切片[start:end:step]
format()
print("Hello {} good {}.".format(5, "days"))

正则表达式
.任意一个字符
\d任意一个数字
\d+一系列数字
[a-z]一个小写字母

列表
列表解析或推导List Comprehension
一种由原列表创建新列表的简洁方法
[表达式 for 变量 in 列表 if 条件]
[x**2 for x in range(1, 10)]

lambda函数
定义匿名函数
lambda x: x**2

元组 不可变列表

字典
键值对 类似纸质字典，通过单词索引找到其相关的定义
C++: map
Java: HashTable or HashMap
单词计数
翻转字典

集合set()

类 对象 面向对象的编程

类的定义
class 类名(父类名): 
    pass
如：
class Animals:
    def move(self):
        print("moving")
    def eat(self):
        print("eating food")

class Mammals(Animals):
    def breastfeed(self):
        print("feeding young")

class Cats(Mammals):
    def __init__(self, spots):
        self.spots = spots
    def catch_mouse(self):
        print("catch mouse")

Kitty = Cats(10)
print(Kitty.spots)
Kitty.move()

子类实例化出来的对象，可以使用自身和父类的函数与变量

类命名时第一个字母常大写

类中定义函数时，语法规定第一个参数必须是self
类内定义函数时，如调用自身或父类的函数与变量，须用self.引导应写为self.函数名或self.变量名

_foo: 以单下划线开头的表示的是protected类型的变量，即保护类型只能允许其本身与子类进行访问，不能用于from module import *
__foo: 双下划线的表示的是私有类型(private)的变量, 只能是允许这个类本身进行访问了
__foo__: 头尾双下划线定义的是特列方法，类似__init__() 之类的