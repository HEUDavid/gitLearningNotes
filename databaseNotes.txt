数据库系统概论

数据库的四个基本概念
数据 Data 数据库中存储的基本对象 描述事物的符号记录 数字、文字、音频、视频… 数据的含义与数据的语义不可分 数据有结构 记录是计算机存储数据的一种格式或一种方法
数据库 Database 是长期储存在计算机内、有组织（数据模型）的、可共享的的大量数据的集合 保存抽取有用信息
    数据库的基本基本特征
        数据模型组织、描述、储存
        共享、冗余的较小、易扩展
        数据独立性较高
数据库管理系统 DBMS 位于用户应用和操作系统之间的一层数据管理软件 基础软件 一个大型复杂的软件系统
    用途 科学地组织和存储数据 高效获取和维护数据
         对数据库进行统一控制
    功能 数据定义功能 DDL 定义数据对象
         数据组织存储管理
         数据操作功能 DML 增删改查
         数据库的事务管理和运行管理
         数据库的建立和维护功能
         其他 和其他软件通信 数据转换 异构数据库之间互访和互操作
数据库系统 在计算机系统中映入数据库后的系统构成
    构成 数据库
         数据库管理系统
         应用程序
         数据库管理员

什么是数据管理 对数据进行分类、组织、编码、存储、检索和维护 数据处理和数据分析的中心问题

数据库系统的特点
数据结构化
数据的共享性高，冗余度低且易扩展
数据独立性高
数据由数据库管理系统统一管理和控制 安全性 完整性 并发控制 数据库恢复

数据模型 现实世界的抽象模型 数据库的核心
    概念模型(用户角度)也称信息模型
    
    .(计算机角度)
        网状 层次 关系 面向对象数据模型 抽象关系数据模型 半结构化数据模型
    物理模型
        在系统内磁盘上的表示方法和存取方法

实体
属性 
码 Key
实体型 用实体名机器属性名集合来抽象和刻画同类实体称为实体型
实体集

联系
实体内 熟悉直接 
实体间

E-R图

数据模型
    数据结构 层次 网状 关系
    数据操作 
    完整性约束

层次模型 类似树 缺点增删改麻烦
网状模型 允许多个节点没双亲
         允许多个双亲
         节点间多个联系
缺点 结构复杂
     DDL DML语言负载
     记录之间依靠存取路径实现 应用程序必须选择路径 加重程序员负担

关系模型 二维表
    关系 一个表
    元组 一行
    属性
    主码
    域 性别域 年龄范围
    分量 元组中的一个属性值
    关系模式 对关系的描述
        关系名(属性1, 属性2, ..., 属性n)
        学生(学号, 姓名, 年龄, 性别)
        
        关系必须规范化 关系的每一个分量不可以在分即不允许表中还有表
        
        数据操作是集合操作 操作对象和操作结果都是关系
        提高了数据的独立性，提高了用户生产率
        
        关系的完整性约束条件
            实体完整性
            参照完整性 关系的两个不变性
            用户定义的完整性
        关系模型的优点
            严格建立在数学概念基础上
            概念单一
                实体和各类联系都用关系来表示
                对数据的检索结果也是关系
            关系模型的存取路径对用户透明
                独立性高、安全性好==>缺点查询效率低

数据库系统的结构
    开发人员 三级模式结构是数据库系统的内部的系统结构
    用户角度 单、多用户 主从、分布 B/S C/S

数据库系统模式的概念
    模式
        “学生选课数据库”模式：学生、课程和学生选课3个关系模式： 
        学生表：Student(Sno，Sname，Ssex，Sage，Sdept)
        课程表：Course(Cno，Cname，Cpno，Ccredit)
        学生选课表：SC(Sno，Cno，Grade) 
    实例
        2014年的学生选课数据库实例
        2013年的学生选课数据库实例

三级模式
    外模式
    模式 逻辑模式 数据库中全体数据的逻辑结构和特征的描述所有用户的公共数据视图 
    内模式
    
    外模式 数据库用户使用的局部数据的逻辑结构和特征的描述 安全性 简化用户试图
           模式 多个外模式 一个模式 对应多个应用
    内模式 数据物理结构和存储方式的描述 数据库内部 一个数据库只有一个模式
    
    三级模式 二级映像
    外模式／模式映像 保证数据的逻辑独立性
    应用程序是依据数据的外模式编写的，应用程序不必修改，保证了数据与程序的逻辑独立性

    模式／内模式映象 保证数据的物理独立性 唯一
    当数据库的存储结构改变了（例如选用了另一种存储结构），数据库管理员修改模式／内模式映象，使模式保持不变。
    模式不变，则应用程序不变。保证了数据与程序的物理独立性 

    以上两个独立性保证了应用程序的稳定性
    程序和数据具有独立性 数据的存取由DBMS控制

数据库系统的组成
DB DBMS DBA APPLICATION

关系模型
单一的数据结构 关系
域
笛卡尔积
给定一组域D1, D2, ..., Dn, 允许某些域是相同的。
D1×D2×…×Dn ＝ ｛（d1，d2，…，dn）｜di∈Di，i＝1，2，…，n｝ 

基数（Cardinal number）
若Di（i＝1，2，…，n）为有限集，其基数为mi（i＝1，2，…， n）
则D1×D2×…×Dn的基数M为：mi的乘积

笛卡尔积的表示方法
笛卡尔积可表示为一张二维表
表中的每行对应一个元组
表中的每列对应一个域

关系是笛卡尔积的子集
R（D1，D2，…，Dn）

关系中的每个元素（d1，d2，…，dn）叫作一个n元组（n-tuple）
或简称元组，通常用 t 表示。 

关系中不同列称为属性（Attribute），每个属性有一个名字
n目关系必有n个属性

码
若关系中的某一属性组的值能唯一地标识一个元组，则称该属性组为候选码
简单的情况：候选码只包含一个属性 
关系模式的所有属性组是这个关系模式的候选码，称为全码（All-key）

若一个关系有多个候选码，则选定其中一个为主码（Primary key） 

候选码的诸属性称为主属性（Prime attribute）
不包含在任何侯选码中的属性称为非主属性（Non-Prime attribute）或非码属性（Non-key attribute）

单元关系与二元关系

基本关系的性质 
① 列是同质的（Homogeneous），即来自同一个属性 
② 不同的列可出自同一个域 
③ 列的顺序无所谓，列的次序可以任意交换
④ 任意两个元组的候选码不能相同 
⑤ 行的顺序无所谓，行的次序可以任意交换
⑥ 分量必须取原子值 规范条件中最基本的一条 表中不能有表

关系模式（Relation Schema）是型、关系是值
关系模式是对关系的描述 
关系模式可以形式化地表示为： 
R（ U ， D ， DOM ， F ）
R 关系名   
U 组成该关系的属性名集合   
D U中属性所来自的域   
DOM 属性向域的映象集合   
F 属性间数据的依赖关系的集合 

关系模式通常可以简记为 R (U) 或 R (A1 ， A2 ， … ， An) 

完整性约束
实体完整性
参照完整性 关系间的引用


















































