go run hello.go
go build hello.go && ./hello


package main // 定义了包名 必须在源文件中非注释的第一行指明这个文件属于哪个包 package main表示一个可独立执行的程序，每个 Go 应用程序都包含一个名为 main 的包

import "fmt" // 告诉 Go 编译器这个程序需要使用 fmt 包（的函数，或其他元素），fmt 包实现了格式化 IO（输入/输出）的函数

func main() { // 是程序开始执行的函数。main 函数是每一个可执行程序所必须包含的，一般来说都是在启动后第一个执行的函数（如果有 init() 函数则会先执行该函数）
   /* 这是我的第一个简单的程序 */
   fmt.Println("Hello, World!")
}

语言结构

数据类别
bool
数字（整型与浮点型、复数、位运算采用补码）
字符串（UTF-8）

派生类型
指针
数组
结构体
Channel
函数
切片
接口
Map

值类型与引用类型
所有像 int、float、bool 和 string 这些基本类型都属于值类型，使用这些类型的变量直接指向存在内存中的值：
当使用等号 = 将一个变量的值赋值给另一个变量时，如：j = i，实际上是在内存中将 i 的值进行了拷贝：
你可以通过 &i 来获取变量 i 的内存地址，例如：0xf840000040（每次的地址都可能不一样）。值类型的变量的值存储在栈中。
这是使用变量的首选形式，但是它只能被用在函数体内，而不可以用于全局变量的声明与赋值。使用操作符 := 可以高效地创建一个新的变量，称之为初始化声明。